diff --git a/src/afs/LINUX/osi_misc.c b/src/afs/LINUX/osi_misc.c
index 32ee5a6..50dd625 100644
--- a/src/afs/LINUX/osi_misc.c
+++ b/src/afs/LINUX/osi_misc.c
@@ -143,7 +143,7 @@ int osi_abspath(char *aname, char *buf, int buflen,
     code = osi_lookupname_internal(name, followlink, &mnt, &dp);
     if (!code) {
 #if defined(D_PATH_TAKES_STRUCT_PATH)
-	afs_linux_path_t p = { mnt, dp };
+	afs_linux_path_t p = { .mnt = mnt, .dentry = dp };
 	path = d_path(&p, buf, buflen);
 #else
 	path = d_path(dp, mnt, buf, buflen);
diff --git a/src/afs/LINUX/osi_sysctl.c b/src/afs/LINUX/osi_sysctl.c
index 834e8ad..514c46e 100644
--- a/src/afs/LINUX/osi_sysctl.c
+++ b/src/afs/LINUX/osi_sysctl.c
@@ -231,7 +231,13 @@ static struct ctl_table afs_sysctl_table[] = {
 	.mode		= 0644,
      	.proc_handler	= &proc_dointvec
     },
-    {0}
+    {
+	.procname	= 0,
+	.data		= 0,
+	.maxlen		= 0,
+	.mode		= 0,
+	.proc_handler	= 0
+    }
 };
 
 static struct ctl_table fs_sysctl_table[] = {
@@ -247,7 +253,13 @@ static struct ctl_table fs_sysctl_table[] = {
 	.mode		= 0555, 
 	.child		= afs_sysctl_table
     },
-    {0}
+    {
+	.procname	= 0,
+	.data		= 0,
+	.maxlen		= 0,
+	.mode		= 0,
+	.proc_handler	= 0
+    }
 };
 
 int
diff --git a/src/afs/afs_fetchstore.c b/src/afs/afs_fetchstore.c
index f494677..cdf5a0c 100644
--- a/src/afs/afs_fetchstore.c
+++ b/src/afs/afs_fetchstore.c
@@ -886,20 +886,28 @@ rxfs_fetchMore(void *r, afs_int32 *length, afs_uint32 *moredata)
 
 static
 struct fetchOps rxfs_fetchUfsOps = {
+#if defined(__GNUC__) || (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L)
+    .more = rxfs_fetchMore,
+    .read = rxfs_fetchUfsRead,
+    .write = rxfs_fetchUfsWrite,
+    .close = rxfs_fetchClose,
+    .destroy = rxfs_fetchDestroy
+#else
     rxfs_fetchMore,
     rxfs_fetchUfsRead,
     rxfs_fetchUfsWrite,
     rxfs_fetchClose,
     rxfs_fetchDestroy
+#endif
 };
 
 static
 struct fetchOps rxfs_fetchMemOps = {
-    rxfs_fetchMore,
-    rxfs_fetchMemRead,
-    rxfs_fetchMemWrite,
-    rxfs_fetchClose,
-    rxfs_fetchDestroy
+    .more = rxfs_fetchMore,
+    .read = rxfs_fetchMemRead,
+    .write = rxfs_fetchMemWrite,
+    .close = rxfs_fetchClose,
+    .destroy = rxfs_fetchDestroy
 };
 
 afs_int32
diff --git a/src/cf/linux-test1.m4 b/src/cf/linux-test1.m4
index fd5bfd8..9d36178 100644
--- a/src/cf/linux-test1.m4
+++ b/src/cf/linux-test1.m4
@@ -144,8 +144,9 @@ dnl AC_CHECK_LINUX_TYPED_STRUCT([structure], [element], [includes])
 AC_DEFUN([AC_CHECK_LINUX_TYPED_STRUCT],
  [AC_CHECK_LINUX_BUILD([for $2 in $1],
 		       [ac_cv_linux_$1_has_$2],
-		       [#include <linux/$3>],
-		       [$1 _test; printk("%x\n", &_test.$2); ],
+		       [#include <linux/$3>
+           $1 _test; ],
+		       [printk("%x\n", &_test.$2); ],
 		       AS_TR_CPP($1_HAS_$2),
 		       [Define if kernel typedef'd $1 has the $2 element])
  ])
@@ -156,7 +157,9 @@ AC_DEFUN([AC_CHECK_LINUX_OPERATION],
   AC_CACHE_CHECK([operation $2 in $1], [ac_linux_operation],
     [save_CPPFLAGS="$CPPFLAGS"
      CPPFLAGS="$CPPFLAGS -Werror"
-     AC_TRY_KBUILD([$4], [struct $1 ops; $5 op($6) { return ($5)0; }; ops.$2 = op;],
+     AC_TRY_KBUILD([$4
+                    $5 op($6) { return ($5)0; };
+                    struct $1 ops = {.$2 = op};], [],
 		   AS_VAR_SET([ac_linux_operation], [yes]),
 		   AS_VAR_SET([ac_linux_operation], [no]))
      CPPFLAGS="$save_CPPFLAGS"
diff --git a/src/cf/linux-test4.m4 b/src/cf/linux-test4.m4
index 604d380..96e2e04 100644
--- a/src/cf/linux-test4.m4
+++ b/src/cf/linux-test4.m4
@@ -188,11 +188,11 @@ AC_DEFUN([LINUX_AOP_WRITEBACK_CONTROL], [
 		       [ac_cv_linux_func_a_writepage_takes_writeback_control],
 [#include <linux/fs.h>
 #include <linux/mm.h>
-#include <linux/writeback.h>],
-[struct address_space_operations _aops;
+#include <linux/writeback.h>
+struct address_space_operations _aops;
 struct page _page;
-struct writeback_control _writeback_control;
-(void)_aops.writepage(&_page, &_writeback_control);],
+struct writeback_control _writeback_control; ],
+[(void)_aops.writepage(&_page, &_writeback_control);],
 		       [AOP_WRITEPAGE_TAKES_WRITEBACK_CONTROL],
 		       [define if aops.writepage takes a struct writeback_control],
 		       [])
@@ -535,9 +535,9 @@ AC_DEFUN([LINUX_D_PATH_TAKES_STRUCT_PATH], [
 AC_DEFUN([LINUX_NEW_EXPORT_OPS], [
   AC_CHECK_LINUX_BUILD([if kernel uses new export ops],
 		       [ac_cv_linux_new_export_ops],
-		       [#include <linux/exportfs.h>],
-		       [struct export_operations _eops;
-			_eops.fh_to_parent(NULL, NULL, 0, 0);],
+		       [#include <linux/exportfs.h>
+           struct export_operations _eops; ],
+		       [_eops.fh_to_parent(NULL, NULL, 0, 0);],
 		       [NEW_EXPORT_OPS],
 		       [define if kernel uses new export ops],
 		       [])
@@ -642,10 +642,10 @@ AC_DEFUN([LINUX_DOP_D_DELETE_TAKES_CONST], [
   AC_CHECK_LINUX_BUILD([whether dentry.d_op->d_delete takes a const argument],
 			[ac_cv_linux_dop_d_delete_takes_const],
 			[#include <linux/fs.h>
-			#include <linux/dcache.h>],
-			[struct dentry_operations _d_ops;
+			#include <linux/dcache.h>
 			int _d_del(const struct dentry *de) {return 0;};
-			_d_ops.d_delete = _d_del;],
+			struct dentry_operations _d_ops = {.d_delete = _d_del};],
+      [],
 			[DOP_D_DELETE_TAKES_CONST],
 			[define if dentry.d_op->d_delete takes a const argument],
 			[-Werror])
@@ -655,10 +655,11 @@ AC_DEFUN([LINUX_DOP_D_DELETE_TAKES_CONST], [
 AC_DEFUN([LINUX_IOP_MKDIR_TAKES_UMODE_T], [
   AC_CHECK_LINUX_BUILD([whether inode.i_op->mkdir takes a umode_t argument],
 			[ac_cv_linux_iop_mkdir_takes_umode_t],
-			[#include <linux/fs.h>],
-			[struct inode_operations _i_ops;
+			[#include <linux/fs.h>
+			struct inode_operations _i_ops;
 			int _mkdir(struct inode *i, struct dentry *d, umode_t m) {return 0;};
-			_i_ops.mkdir = _mkdir;],
+			struct inode_operations _i_ops = {.mkdir = _mkdir};],
+      [],
 			[IOP_MKDIR_TAKES_UMODE_T],
 			[define if inode.i_op->mkdir takes a umode_t argument],
 			[-Werror])
@@ -682,11 +683,11 @@ AC_DEFUN([LINUX_IOP_CREATE_TAKES_UMODE_T], [
 AC_DEFUN([LINUX_EXPORT_OP_ENCODE_FH_TAKES_INODES], [
   AC_CHECK_LINUX_BUILD([whether export operation encode_fh takes inode arguments],
 			[ac_cv_linux_export_op_encode_fh__takes_inodes],
-			[#include <linux/exportfs.h>],
-			[struct export_operations _exp_ops;
+			[#include <linux/exportfs.h>
 			int _encode_fh(struct inode *i, __u32 *fh, int *len, struct inode *p)
 				{return 0;};
-			_exp_ops.encode_fh = _encode_fh;],
+			struct export_operations _exp_ops = {.encode_fh = _encode_fh};],
+      [],
 			[EXPORT_OP_ENCODE_FH_TAKES_INODES],
 			[define if encode_fh export op takes inode arguments],
 			[-Werror])
@@ -771,10 +772,10 @@ AC_DEFUN([LINUX_DOP_D_REVALIDATE_TAKES_UNSIGNED], [
   AC_CHECK_LINUX_BUILD([whether dentry_operations.d_revalidate takes an unsigned int],
 			[ac_cv_linux_func_d_revalidate_takes_unsigned],
 			[#include <linux/fs.h>
-			#include <linux/namei.h>],
-			[struct dentry_operations dops;
+			#include <linux/namei.h>
 			int reval(struct dentry *d, unsigned int i) { return 0; };
-			dops.d_revalidate = reval;],
+			struct dentry_operations dops = {.d_revalidate = reval};],
+      [],
 		       [DOP_REVALIDATE_TAKES_UNSIGNED],
 		       [define if your dops.d_revalidate takes an unsigned int argument],
 		       [-Werror])
@@ -785,10 +786,10 @@ AC_DEFUN([LINUX_IOP_LOOKUP_TAKES_UNSIGNED], [
   AC_CHECK_LINUX_BUILD([whether inode operation lookup takes an unsigned int],
 			[ac_cv_linux_func_lookup_takes_unsigned],
 			[#include <linux/fs.h>
-			#include <linux/namei.h>],
-			[struct inode_operations iops;
+			#include <linux/namei.h>
 			struct dentry *look(struct inode *i, struct dentry *d, unsigned int j) { return NULL; };
-			iops.lookup = look;],
+			struct inode_operations iops = {.lookup = look};],
+      [],
 		       [IOP_LOOKUP_TAKES_UNSIGNED],
 		       [define if your iops.lookup takes an unsigned int argument],
 		       [-Werror])
diff --git a/src/rxkad/rxkad_client.c b/src/rxkad/rxkad_client.c
index 2dd8163..f6f4d7c 100644
--- a/src/rxkad/rxkad_client.c
+++ b/src/rxkad/rxkad_client.c
@@ -68,6 +68,23 @@
 #endif /* max */
 
 static struct rx_securityOps rxkad_client_ops = {
+#if defined(__GNUC__) || (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L)
+    .op_Close = rxkad_Close,
+    .op_NewConnection = rxkad_NewConnection,	/* every new connection */
+    .op_PreparePacket = rxkad_PreparePacket,	/* once per packet creation */
+    .op_SendPacket = 0,				/* send packet (once per retrans.) */
+    .op_CheckAuthentication = 0,
+    .op_CreateChallenge = 0,
+    .op_GetChallenge = 0,
+    .op_GetResponse = rxkad_GetResponse,		/* respond to challenge packet */
+    .op_CheckResponse = 0,
+    .op_CheckPacket = rxkad_CheckPacket,		/* check data packet */
+    .op_DestroyConnection = rxkad_DestroyConnection,
+    .op_GetStats = rxkad_GetStats,
+    .op_SetConfiguration = 0,
+    .op_Spare2 = 0,
+    .op_Spare3 = 0,
+#else
     rxkad_Close,
     rxkad_NewConnection,	/* every new connection */
     rxkad_PreparePacket,	/* once per packet creation */
@@ -83,6 +100,7 @@ static struct rx_securityOps rxkad_client_ops = {
     0,
     0,
     0,
+#endif
 };
 
 /* To minimize changes to epoch, we set this Cuid once, and everyone (including
